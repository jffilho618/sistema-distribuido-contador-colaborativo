@echo off
REM Script de build para o Cliente C++ Qt (Windows)
REM Sistema Distribu√≠do - Contador de Letras/N√∫meros

echo üöÄ Cliente C++ Qt - Sistema Distribu√≠do (Windows)
echo ==============================================

REM Verificar se estamos no diret√≥rio correto
if not exist "client.pro" (
    if not exist "CMakeLists.txt" (
        echo ‚ùå Nem client.pro nem CMakeLists.txt encontrados. Execute este script do diret√≥rio client/
        pause
        exit /b 1
    )
)

echo ‚ÑπÔ∏è  Verificando depend√™ncias...

REM Verificar qmake primeiro
qmake -version >nul 2>&1
if not errorlevel 1 (
    echo ‚úÖ Qt encontrado via qmake
    set BUILD_METHOD=qmake
    goto build
)

REM Verificar CMake se qmake n√£o dispon√≠vel
cmake --version >nul 2>&1
if not errorlevel 1 (
    echo ‚úÖ CMake encontrado, Qt n√£o dispon√≠vel
    set BUILD_METHOD=cmake
    goto build
)

echo ‚ùå Nem Qt nem CMake est√£o instalados
echo Instale o Qt: https://www.qt.io/download
echo Ou CMake: https://cmake.org/download/
pause
exit /b 1

:build

if "%BUILD_METHOD%"=="qmake" (
    echo ‚ÑπÔ∏è  Compilando com Qt...

    REM Limpar arquivos anteriores
    if exist "Makefile" (
        echo ‚ÑπÔ∏è  Limpando build anterior...
        del /q Makefile* 2>nul
    )

    REM Gerar Makefile
    echo ‚ÑπÔ∏è  Gerando Makefile...
    qmake client.pro

    if errorlevel 1 (
        echo ‚ùå Falha ao gerar Makefile
        echo Verifique se o Qt est√° corretamente instalado
        pause
        exit /b 1
    )

    REM Compilar
    echo ‚ÑπÔ∏è  Compilando aplica√ß√£o...
    nmake release 2>nul || make release 2>nul || mingw32-make release 2>nul

    REM Verificar resultado
    if exist "release\client.exe" (
        echo ‚úÖ Compila√ß√£o conclu√≠da com sucesso!
        echo.
        echo üéâ Cliente Qt compilado!
        echo üìç Execut√°vel: %cd%\release\client.exe
        echo.
        echo Para executar:
        echo   release\client.exe
    ) else if exist "client.exe" (
        echo ‚úÖ Compila√ß√£o conclu√≠da com sucesso!
        echo.
        echo üéâ Cliente Qt compilado!
        echo üìç Execut√°vel: %cd%\client.exe
        echo.
        echo Para executar:
        echo   client.exe
    ) else (
        echo ‚ùå Falha na compila√ß√£o
        echo Verifique se todas as depend√™ncias Qt est√£o instaladas
        pause
        exit /b 1
    )

) else (
    echo ‚ÑπÔ∏è  Compilando com CMake...

    REM Criar diret√≥rio de build
    if not exist "build" mkdir build
    cd build

    REM Limpar build anterior
    if exist "*.sln" (
        echo ‚ÑπÔ∏è  Limpando build anterior...
        del /q * 2>nul
    )

    REM Configurar build
    echo ‚ÑπÔ∏è  Configurando build com CMake...
    cmake .. -DCMAKE_BUILD_TYPE=Release

    if errorlevel 1 (
        echo ‚ùå Falha na configura√ß√£o CMake
        echo Verifique se o Qt est√° corretamente instalado
        pause
        exit /b 1
    )

    REM Compilar
    echo ‚ÑπÔ∏è  Compilando aplica√ß√£o...
    cmake --build . --config Release

    REM Verificar resultado
    if exist "Release\client.exe" (
        echo ‚úÖ Compila√ß√£o conclu√≠da com sucesso!
        echo.
        echo üéâ Cliente Qt compilado!
        echo üìç Execut√°vel: %cd%\Release\client.exe
        echo.
        echo Para executar:
        echo   Release\client.exe
    ) else if exist "client.exe" (
        echo ‚úÖ Compila√ß√£o conclu√≠da com sucesso!
        echo.
        echo üéâ Cliente Qt compilado!
        echo üìç Execut√°vel: %cd%\client.exe
        echo.
        echo Para executar:
        echo   client.exe
    ) else (
        echo ‚ùå Falha na compila√ß√£o
        echo Verifique os erros acima
        pause
        exit /b 1
    )
)

pause